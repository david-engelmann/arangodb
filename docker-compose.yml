version: "3.8"

networks:
    arangodb-net:
        name: arangodb-net
        driver: bridge
        ipam:
            driver: default

services:
    redis:
        image: redis:6.2-alpine
        restart: always
        ports:
            - "6379:6379"
        command: redis-server --save 60 1 --loglevel warning &
        volumes:
            - redis:/data
        networks:
            - arangodb-net
        healthcheck:
            test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
            interval: 1s
            timeout: 3s
            retries: 5
    agency:
        image: arangodb/arangodb
        container_name: agency
        environment:
            - ARANGO_NO_AUTH=1
            - ARANGO_ROOT_PASSWORD=julyjackson
        networks:
            - arangodb-net
        command: ["sh", "-c", "arangod --server.endpoint tcp://0.0.0.0:5001 --agency.my-address=tcp://agency:5001 --agency.endpoint tcp://agency:5001 --server.authentication false --agency.activate true --agency.size 1 --agency.supervision true --database.directory agency"]
        volumes:
        - agency:/var/lib/arangodb3
        - agency_app:/var/lib/arangodb3-apps
        - _agency:/agency

    coordinator:
        image: arangodb/arangodb
        container_name: coordinator
        environment:
            - ARANGO_NO_AUTH=1
            - ARANGO_ROOT_PASSWORD=julyjackson
        networks:
            - arangodb-net
        command: ["sh", "-c", "arangod --server.authentication=false --server.endpoint tcp://0.0.0.0:8529 --cluster.my-address tcp://coordinator:8529 --cluster.my-local-info coord1 --cluster.my-role COORDINATOR --cluster.agency-endpoint tcp://agency:5001 --database.directory coordinator"]
        ports: ['8000:8529']
        depends_on:
            - agency
        volumes:
        - coordinator:/var/lib/arangodb3
        - coordinator_app:/var/lib/arangodb3-apps
        - _coordinator:/coord1

    coordinator2:
        image: arangodb/arangodb
        container_name: coordinator2
        environment:
            - ARANGO_NO_AUTH=1
            - ARANGO_ROOT_PASSWORD=julyjackson
        networks:
            - arangodb-net
        command: ["sh", "-c", "arangod --server.authentication=false --server.endpoint tcp://0.0.0.0:8529 --cluster.my-address tcp://coordinator2:8529 --cluster.my-local-info coord2 --cluster.my-role COORDINATOR --cluster.agency-endpoint tcp://agency:5001 --database.directory coordinator2"]
        ports: ['8001:8529']
        depends_on:
            - agency
        volumes:
        - coordinator2:/var/lib/arangodb3
        - coordinator2_app:/var/lib/arangodb3-apps
        - _coordinator2:/coord2

    db1:
        image: arangodb/arangodb
        container_name: db1
        environment:
            - ARANGO_NO_AUTH=1
            - ARANGO_ROOT_PASSWORD=julyjackson
        networks:
            - arangodb-net
        command: ["sh", "-c", "arangod --server.authentication=false --server.endpoint tcp://0.0.0.0:8529 --cluster.my-address tcp://db1:8529 --cluster.my-local-info db1 --cluster.my-role DBSERVER --cluster.agency-endpoint tcp://agency:5001 --database.directory db1"]
        depends_on:
            - agency
        volumes:
        - db1:/var/lib/arangodb3
        - db1_app:/var/lib/arangodb3-apps
        - _db1:/db1

    db2:
        image: arangodb/arangodb
        container_name: db2
        environment:
            - ARANGO_NO_AUTH=1
            - ARANGO_ROOT_PASSWORD=julyjackson
        networks:
            - arangodb-net
        command: ["sh", "-c", "arangod --server.authentication=false --server.endpoint tcp://0.0.0.0:8529 --cluster.my-address tcp://db2:8529 --cluster.my-local-info db2 --cluster.my-role DBSERVER --cluster.agency-endpoint tcp://agency:5001 --database.directory db2"]
        depends_on:
            - agency
        volumes:
        - db2:/var/lib/arangodb3
        - db2_app:/var/lib/arangodb3-apps
        - _db2:/db2

    db3:
        image: arangodb/arangodb
        container_name: db3
        environment:
            - ARANGO_NO_AUTH=1
            - ARANGO_ROOT_PASSWORD=julyjackson
        networks:
            - arangodb-net
        command: ["sh", "-c", "arangod --server.authentication=false --server.endpoint tcp://0.0.0.0:8529 --cluster.my-address tcp://db3:8529 --cluster.my-local-info db3 --cluster.my-role DBSERVER --cluster.agency-endpoint tcp://agency:5001 --database.directory db3"]
        depends_on:
            - agency
        volumes:
        - db3:/var/lib/arangodb3
        - db3_app:/var/lib/arangodb3-apps
        - _db3:/db3

    arangodb:
        restart: always
        image: arangodb
        container_name: arangodb
        user: root
        env_file:
            - .env
        #working_dir: /app
        networks:
            - arangodb-net
        ports:
            - "8008:8008"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
        command: ["sh", "-c", "ping -c https://agency:5001 && dune build && sleep infinity"]
        privileged: true
        build:
            context: ..
            dockerfile: docker/Dockerfile
            args:
                ARANGO_HOST: "${ARANGO_HOST:-agency}"
                ARANGO_PORT: "${ARANGO_PORT:-5001}"
                ARANGO_USER: "${ARANGO_USER:-root}"
                ARANGO_PASSWORD: "${ARANGO_PASSWORD:-julyjackson}"
                ARANGO_ROOT_PASSWORD: "${ARANGO_ROOT_PASSWORD:-julyjackson}"

        links:
            - "agency:agency"
            - "coordinator:coordinator"
            - "coordinator2:coordinator2"
            - "db1:db1"
            - "db2:db2"
            - "db3:db3"
            - "redis:redis"
        depends_on:
            - redis
            - agency
            - coordinator
            - coordinator2
            - db1
            - db2
            - db3



volumes:
  agency:
  _agency:
  agency_app:
  coordinator:
  _coordinator:
  coordinator_app:
  coordinator2:
  _coordinator2:
  coordinator2_app:
  db1:
  _db1:
  db1_app:
  db2:
  _db2:
  db2_app:
  db3:
  _db3:
  db3_app:
  redis:

